import type { Unrecognized } from "../../../utils/unrecognized.js";
import { PaymentError } from "../PaymentError.js";
import type { CashReceiptAlreadyIssuedError } from "../../payment/cashReceipt/CashReceiptAlreadyIssuedError.js";
import type { CashReceiptNotFoundError } from "../../payment/cashReceipt/CashReceiptNotFoundError.js";
import type { CashReceiptNotIssuedError } from "../../payment/cashReceipt/CashReceiptNotIssuedError.js";
import type { ChannelNotFoundError } from "../../common/ChannelNotFoundError.js";
import type { ForbiddenError } from "../../common/ForbiddenError.js";
import type { InvalidRequestError } from "../../common/InvalidRequestError.js";
import type { PgProviderError } from "../../common/PgProviderError.js";
import type { UnauthorizedError } from "../../common/UnauthorizedError.js";
export declare abstract class CashReceiptError extends PaymentError {
    readonly data: CashReceiptAlreadyIssuedError | CashReceiptNotFoundError | CashReceiptNotIssuedError | ChannelNotFoundError | ForbiddenError | InvalidRequestError | PgProviderError | UnauthorizedError | {
        readonly type: Unrecognized;
    };
}
