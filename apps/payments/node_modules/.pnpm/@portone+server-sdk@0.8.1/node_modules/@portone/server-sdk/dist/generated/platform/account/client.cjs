"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AccountClient = AccountClient;
exports.GetPlatformAccountHolderError = void 0;
var _AccountError = require("./AccountError.cjs");
var _client = require("../../../client.cjs");
function AccountClient(init) {
  const baseUrl = init.baseUrl ?? "https://api.portone.io";
  const secret = init.secret;
  return {
    getPlatformAccountHolder: async options => {
      const {
        bank,
        accountNumber,
        birthdate,
        businessRegistrationNumber
      } = options;
      const query = [["birthdate", birthdate], ["businessRegistrationNumber", businessRegistrationNumber]].flatMap(([key, value]) => value == null ? [] : `${key}=${encodeURIComponent(value)}`).join("&");
      const response = await fetch(new URL(`/platform/bank-accounts/${encodeURIComponent(bank)}/${encodeURIComponent(accountNumber)}/holder?${query}`, baseUrl), {
        method: "GET",
        headers: {
          Authorization: `PortOne ${secret}`,
          "User-Agent": _client.USER_AGENT
        }
      });
      if (!response.ok) {
        throw new GetPlatformAccountHolderError(await response.json());
      }
      return response.json();
    }
  };
}
class GetPlatformAccountHolderError extends _AccountError.AccountError {
  /** @ignore */
  constructor(data) {
    super(data);
    Object.setPrototypeOf(this, GetPlatformAccountHolderError.prototype);
    this.name = "GetPlatformAccountHolderError";
  }
}
exports.GetPlatformAccountHolderError = GetPlatformAccountHolderError;