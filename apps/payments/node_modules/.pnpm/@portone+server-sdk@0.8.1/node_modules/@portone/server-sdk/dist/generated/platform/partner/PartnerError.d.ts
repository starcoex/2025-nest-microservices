import type { Unrecognized } from "../../../utils/unrecognized.js";
import { PlatformError } from "../PlatformError.js";
import type { ForbiddenError } from "../../common/ForbiddenError.js";
import type { InvalidRequestError } from "../../common/InvalidRequestError.js";
import type { PlatformAccountVerificationAlreadyUsedError } from "../../platform/PlatformAccountVerificationAlreadyUsedError.js";
import type { PlatformAccountVerificationFailedError } from "../../platform/PlatformAccountVerificationFailedError.js";
import type { PlatformAccountVerificationNotFoundError } from "../../platform/PlatformAccountVerificationNotFoundError.js";
import type { PlatformArchivedPartnerError } from "../../platform/PlatformArchivedPartnerError.js";
import type { PlatformCannotArchiveScheduledPartnerError } from "../../platform/partner/PlatformCannotArchiveScheduledPartnerError.js";
import type { PlatformContractNotFoundError } from "../../platform/PlatformContractNotFoundError.js";
import type { PlatformContractsNotFoundError } from "../../platform/partner/PlatformContractsNotFoundError.js";
import type { PlatformCurrencyNotSupportedError } from "../../platform/PlatformCurrencyNotSupportedError.js";
import type { PlatformInsufficientDataToChangePartnerTypeError } from "../../platform/PlatformInsufficientDataToChangePartnerTypeError.js";
import type { PlatformNotEnabledError } from "../../platform/PlatformNotEnabledError.js";
import type { PlatformPartnerIdAlreadyExistsError } from "../../platform/partner/PlatformPartnerIdAlreadyExistsError.js";
import type { PlatformPartnerIdsAlreadyExistError } from "../../platform/partner/PlatformPartnerIdsAlreadyExistError.js";
import type { PlatformPartnerIdsDuplicatedError } from "../../platform/partner/PlatformPartnerIdsDuplicatedError.js";
import type { PlatformPartnerNotFoundError } from "../../platform/PlatformPartnerNotFoundError.js";
import type { PlatformUserDefinedPropertyNotFoundError } from "../../platform/PlatformUserDefinedPropertyNotFoundError.js";
import type { UnauthorizedError } from "../../common/UnauthorizedError.js";
export declare abstract class PartnerError extends PlatformError {
    readonly data: ForbiddenError | InvalidRequestError | PlatformAccountVerificationAlreadyUsedError | PlatformAccountVerificationFailedError | PlatformAccountVerificationNotFoundError | PlatformArchivedPartnerError | PlatformCannotArchiveScheduledPartnerError | PlatformContractNotFoundError | PlatformContractsNotFoundError | PlatformCurrencyNotSupportedError | PlatformInsufficientDataToChangePartnerTypeError | PlatformNotEnabledError | PlatformPartnerIdAlreadyExistsError | PlatformPartnerIdsAlreadyExistError | PlatformPartnerIdsDuplicatedError | PlatformPartnerNotFoundError | PlatformUserDefinedPropertyNotFoundError | UnauthorizedError | {
        readonly type: Unrecognized;
    };
}
