import { BulkPayoutError } from "./BulkPayoutError.js";
import type { Unrecognized } from "./../../../utils/unrecognized.js";
import { type PortOneClientInit } from "../../../client.js";
import type { ForbiddenError } from "../../../generated/common/ForbiddenError.js";
import type { GetPlatformBulkPayoutsResponse } from "../../../generated/platform/bulkPayout/GetPlatformBulkPayoutsResponse.js";
import type { InvalidRequestError } from "../../../generated/common/InvalidRequestError.js";
import type { PageInput } from "../../../generated/common/PageInput.js";
import type { PlatformBulkPayoutFilterInput } from "../../../generated/platform/bulkPayout/PlatformBulkPayoutFilterInput.js";
import type { PlatformNotEnabledError } from "../../../generated/platform/PlatformNotEnabledError.js";
import type { UnauthorizedError } from "../../../generated/common/UnauthorizedError.js";
export declare function BulkPayoutClient(init: PortOneClientInit): BulkPayoutClient;
export type BulkPayoutClient = {
    /**
     * 일괄 지급 내역 다건 조회
     *
     * 성공 응답으로 조회된 일괄 지급 내역 리스트와 페이지 정보 및 상태 별 개수 정보를 반환합니다.
     *
     * @throws {@link GetPlatformBulkPayoutsError}
     */
    getPlatformBulkPayouts: (options?: {
        isForTest?: boolean;
        page?: PageInput;
        filter?: PlatformBulkPayoutFilterInput;
    }) => Promise<GetPlatformBulkPayoutsResponse>;
};
export declare class GetPlatformBulkPayoutsError extends BulkPayoutError {
    readonly data: ForbiddenError | InvalidRequestError | PlatformNotEnabledError | UnauthorizedError | {
        readonly type: Unrecognized;
    };
    /** @ignore */
    constructor(data: ForbiddenError | InvalidRequestError | PlatformNotEnabledError | UnauthorizedError | {
        readonly type: Unrecognized;
    });
}
