import { PartnerSettlementError } from "./PartnerSettlementError.js";
import type { Unrecognized } from "./../../../utils/unrecognized.js";
import { type PortOneClientInit } from "../../../client.js";
import type { ForbiddenError } from "../../../generated/common/ForbiddenError.js";
import type { GetPlatformPartnerSettlementsResponse } from "../../../generated/platform/partnerSettlement/GetPlatformPartnerSettlementsResponse.js";
import type { InvalidRequestError } from "../../../generated/common/InvalidRequestError.js";
import type { PageInput } from "../../../generated/common/PageInput.js";
import type { PlatformNotEnabledError } from "../../../generated/platform/PlatformNotEnabledError.js";
import type { PlatformPartnerSettlementFilterInput } from "../../../generated/platform/partnerSettlement/PlatformPartnerSettlementFilterInput.js";
import type { UnauthorizedError } from "../../../generated/common/UnauthorizedError.js";
export declare function PartnerSettlementClient(init: PortOneClientInit): PartnerSettlementClient;
export type PartnerSettlementClient = {
    /**
     * 정산 내역 다건 조회
     *
     * 여러 정산 내역을 조회합니다.
     *
     * @throws {@link GetPlatformPartnerSettlementsError}
     */
    getPlatformPartnerSettlements: (options: {
        /** 요청할 페이지 정보 */
        page?: PageInput;
        /** 조회할 정산내역 조건 필터 */
        filter: PlatformPartnerSettlementFilterInput;
        isForTest: boolean;
    }) => Promise<GetPlatformPartnerSettlementsResponse>;
};
export declare class GetPlatformPartnerSettlementsError extends PartnerSettlementError {
    readonly data: ForbiddenError | InvalidRequestError | PlatformNotEnabledError | UnauthorizedError | {
        readonly type: Unrecognized;
    };
    /** @ignore */
    constructor(data: ForbiddenError | InvalidRequestError | PlatformNotEnabledError | UnauthorizedError | {
        readonly type: Unrecognized;
    });
}
